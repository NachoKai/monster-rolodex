{"version":3,"sources":["components/SearchBox.js","components/Card.js","components/CardList.js","App.js","index.js"],"names":["Input","styled","input","SearchBox","onSearchChange","placeholder","className","type","onChange","Container","div","Name","h2","Image","img","Data","p","Card","monster","name","alt","src","id","username","email","website","List","CardList","monsters","map","Title","h1","App","useState","setMonsters","searchField","setSearchFields","useEffect","fetch","then","response","json","users","filteredMonsters","filter","toLowerCase","includes","event","target","value","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oVAEA,IAAMA,EAAQC,IAAOC,MAAV,KAiBIC,EAXG,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,eAAgBC,EAAkB,EAAlBA,YACnC,OACE,cAACL,EAAD,CACEM,UAAU,aACVC,KAAK,SACLF,YAAaA,EACbG,SAAUJ,K,6nBCZhB,IAAMK,EAAYR,IAAOS,IAAV,KAiBTC,EAAOV,IAAOW,GAAV,KAIJC,EAAQZ,IAAOa,IAAV,KAILC,EAAOd,IAAOe,EAAV,KAqBKC,EAjBF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACd,OACE,eAACT,EAAD,WACE,eAACE,EAAD,eAAQO,EAAQC,KAAhB,OACA,cAACN,EAAD,CACEP,UAAU,cACVc,IAAI,UACJC,IAAG,+BAA0BH,EAAQI,GAAlC,4BAEL,eAACP,EAAD,eAAQG,EAAQK,SAAhB,OACA,eAACR,EAAD,eAAQG,EAAQM,MAAhB,OACA,eAACT,EAAD,eAAQG,EAAQO,QAAhB,OACA,eAACV,EAAD,eAAQG,EAAQI,GAAhB,W,iKCxCN,IAAMI,EAAOzB,IAAOS,IAAV,KAiBKiB,EAVE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClB,OACE,cAACF,EAAD,UACGE,EAASC,KAAI,SAAAX,GAAO,OACnB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQI,U,2NCR3B,IAAMQ,EAAQ7B,IAAO8B,GAAV,KAILtB,EAAYR,IAAOS,IAAV,KAyCAsB,EApCH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACTL,EADS,KACCM,EADD,OAEuBD,mBAAS,IAFhC,mBAETE,EAFS,KAEIC,EAFJ,KAIhBC,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAIR,EAAYQ,QAC5B,IAEH,IAIMC,EAAmBf,EAASgB,QAAO,SAAA1B,GAAO,OAC9CA,EAAQC,KAAK0B,cAAcC,SAASX,EAAYU,kBAGlD,OACE,sBAAKvC,UAAU,MAAf,UACE,cAACwB,EAAD,+BACA,cAAC,EAAD,CACE1B,eAZiB,SAAA2C,GACrBX,EAAgBW,EAAMC,OAAOC,QAYzB5C,YAAY,uBAEd,cAAC,EAAD,UACGsC,EAAiBO,OAAS,EACzB,cAAC,EAAD,CAAUtB,SAAUe,IAEpB,2BCxCVQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.49d3cfd1.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Input = styled.input`\n  border-radius: 8px;\n  padding: 8px;\n  margin-bottom: 16px;\n`;\n\nconst SearchBox = ({ onSearchChange, placeholder }) => {\n  return (\n    <Input\n      className=\"search-box\"\n      type=\"search\"\n      placeholder={placeholder}\n      onChange={onSearchChange}\n    />\n  );\n};\n\nexport default SearchBox;\n","import styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  margin: 1rem;\n  padding: 1rem;\n  border: 1px solid #222;\n  border-radius: 1rem;\n  background-color: #3b3b3b;\n\n  &:hover {\n    background-color: #303030;\n    cursor: pointer;\n  }\n`;\n\nconst Name = styled.h2`\n  font-weight: 900;\n`;\n\nconst Image = styled.img`\n  margin-bottom: 1rem;\n`;\n\nconst Data = styled.p`\n  margin: 0.2rem 0;\n`;\n\nconst Card = ({ monster }) => {\n  return (\n    <Container>\n      <Name> {monster.name} </Name>\n      <Image\n        className=\"monster-img\"\n        alt=\"monster\"\n        src={`https://robohash.org/${monster.id}?set=set2&size=180x180`}\n      />\n      <Data> {monster.username} </Data>\n      <Data> {monster.email} </Data>\n      <Data> {monster.website} </Data>\n      <Data> {monster.id} </Data>\n    </Container>\n  );\n};\n\nexport default Card;\n","import styled from \"styled-components\";\nimport Card from \"./Card\";\n\nconst List = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n\nconst CardList = ({ monsters }) => {\n  return (\n    <List>\n      {monsters.map(monster => (\n        <Card key={monster.id} monster={monster} />\n      ))}\n    </List>\n  );\n};\n\nexport default CardList;\n","import { useEffect, useState } from \"react\";\nimport SearchBox from \"./components/SearchBox\";\nimport CardList from \"./components/CardList\";\nimport styled from \"styled-components\";\nimport \"./App.scss\";\n\nconst Title = styled.h1`\n  margin: 32px 0 16px 0;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst App = () => {\n  const [monsters, setMonsters] = useState([]);\n  const [searchField, setSearchFields] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(response => response.json())\n      .then(users => setMonsters(users));\n  }, []);\n\n  const onSearchChange = event => {\n    setSearchFields(event.target.value);\n  };\n\n  const filteredMonsters = monsters.filter(monster =>\n    monster.name.toLowerCase().includes(searchField.toLowerCase())\n  );\n\n  return (\n    <div className=\"App\">\n      <Title>Monsters Rolodex</Title>\n      <SearchBox\n        onSearchChange={onSearchChange}\n        placeholder=\"Search monsters...\"\n      />\n      <Container>\n        {filteredMonsters.length > 0 ? (\n          <CardList monsters={filteredMonsters} />\n        ) : (\n          \"Monster not found.\"\n        )}\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}